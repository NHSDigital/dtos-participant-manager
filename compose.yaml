services:
  ### ✅ API Backend (Azure Functions in .NET 9) ###
  backend-api:
    container_name: "backend-api"
    build:
      context: ./src/api
      dockerfile: ParticipantManager.API/Dockerfile
    platform: linux/amd64
    restart: always
    environment:
      FUNCTIONS_WORKER_RUNTIME: "dotnet-isolated"
      AzureWebJobsStorage: "${AZURE_WEB_JOBS_STORAGE}"
      AzureWebJobsSecretStorageType: "files"
      ParticipantManagerDatabaseConnectionString: "Server=${DATABASE_HOST};Database=${DATABASE_NAME};User Id=${DATABASE_USER};Password=${DATABASE_PASSWORD};TrustServerCertificate=True"
    ports:
      - "${API_PORT}:80"
    networks:
      - backend

  ### ✅ Experience API (Azure Functions in .NET 9) ###
  experience-api:
    container_name: "experience-api"
    build:
      context: ./src/api
      dockerfile: ParticipantManager.Experience.API/Dockerfile
    platform: linux/amd64
    restart: always
    environment:
      FUNCTIONS_WORKER_RUNTIME: "dotnet-isolated"
      AzureWebJobsStorage: "${AZURE_WEB_JOBS_STORAGE}"
      AzureWebJobsSecretStorageType: "files"
    ports:
      - "${EXPERIENCE_PORT}:80"
    networks:
      - backend

    ### ✅ Event Handler (Azure Functions in .NET 9) ###
  event-handler:
    container_name: "event-handler"
    build:
      context: ./src/api
      dockerfile: ParticipantManager.EventHandler/Dockerfile
    platform: linux/amd64
    restart: always
    environment:
      FUNCTIONS_WORKER_RUNTIME: "dotnet-isolated"
      AzureWebJobsStorage: "${AZURE_WEB_JOBS_STORAGE}"
      AzureWebJobsSecretStorageType: "files"
    ports:
      - "${EVENT_HANDLER_PORT}:80"
    networks:
      - backend

  ### ✅ Next.js Frontend ###
  nextjs-frontend:
    container_name: "nextjs-frontend"
    build:
      context: ./src/web
      dockerfile: Dockerfile
      args:
        AUTH_NHSLOGIN_PRIVATE_KEY: "${AUTH_NHSLOGIN_PRIVATE_KEY}"
    restart: always
    platform: linux/amd64
    depends_on:
      - experience-api
    ports:
      - "${WEB_PORT}:3000"
    networks:
      - backend

  oidc-server:
    image: soluto/oidc-server-mock:latest
    platform: linux/amd64
    ports:
      - "8010:443"
      - "8020:80"
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      ASPNETCORE_URLS: https://+:443;http://+80
      ASPNETCORE_HTTPS_PORT: 8010
      ASPNETCORE_Kestrel__Certificates__Default__Password: password
      ASPNETCORE_Kestrel__Certificates__Default__Path: /https/aspnetapp.pfx
      AUTHENTICATION:ISSUER: https://localhost:8010
      SERVER_OPTIONS_INLINE: |
        {
          "Authentication": {
            "CookieSameSiteMode": "Lax",
            "CheckSessionCookieSameSiteMode": "Lax"
          }
        }
      API_SCOPES_INLINE: |
        [
          {
            "Name": "profile_extended"
          }
        ]
      API_RESOURCES_INLINE: |
        [
          {
            "Name": "some-app",
            "Scopes": ["profile_extended"]
          }
        ]
      USERS_CONFIGURATION_PATH: /tmp/config/users.json
      CLIENTS_CONFIGURATION_PATH: /tmp/config/config.json

    volumes:
      - ./mock-oidc:/tmp/config:ro
      - ${PFX_CERT_PATH:-~/.aspnet/https}:/https:ro

networks:
  backend:
    driver: bridge
