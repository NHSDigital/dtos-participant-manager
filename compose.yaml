services:
  ### ✅ PostgreSQL Database ###
  postgres:
    container_name: "postgres-db"
    image: postgres:16
    restart: always
    environment:
      - POSTGRES_USER=${DATABASE_USER}
      - POSTGRES_PASSWORD=${DATABASE_PASSWORD}
      - POSTGRES_DB=${DATABASE_NAME}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - backend
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DATABASE_USER}"]
      interval: 10s
      timeout: 5s
      retries: 5

  ### ✅ API Backend (Azure Functions in .NET 9) ###
  backend-api:
    container_name: "backend-api"
    build:
      context: ./src/api
      dockerfile: ParticipantManager.API/Dockerfile
    platform: linux/amd64
    restart: always
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      FUNCTIONS_WORKER_RUNTIME: "dotnet-isolated"
      AzureWebJobsStorage: "${AZURE_WEB_JOBS_STORAGE}"
      AzureWebJobsSecretStorageType: "files"
      ParticipantManagerDatabaseConnectionString: "Host=${DATABASE_HOST};Port=5432;Database=${DATABASE_NAME};Username=${DATABASE_USER};Password=${DATABASE_PASSWORD};"
    ports:
      - "${API_PORT}:80"
    networks:
      - backend

  ### ✅ Experience API (Azure Functions in .NET 9) ###
  experience-api:
    container_name: "experience-api"
    build:
      context: ./src/api
      dockerfile: ParticipantManager.Experience.API/Dockerfile
    platform: linux/amd64
    restart: always
    environment:
      FUNCTIONS_WORKER_RUNTIME: "dotnet-isolated"
      AzureWebJobsStorage: "${AZURE_WEB_JOBS_STORAGE}"
      AzureWebJobsSecretStorageType: "files"
    ports:
      - "${EXPERIENCE_PORT}:80"
    networks:
      - backend

  ### ✅ Event Handler (Azure Functions in .NET 9) ###
  event-handler:
    container_name: "event-handler"
    build:
      context: ./src/api
      dockerfile: ParticipantManager.EventHandler/Dockerfile
    platform: linux/amd64
    restart: always
    environment:
      FUNCTIONS_WORKER_RUNTIME: "dotnet-isolated"
      AzureWebJobsStorage: "${AZURE_WEB_JOBS_STORAGE}"
      AzureWebJobsSecretStorageType: "files"
    ports:
      - "${EVENT_HANDLER_PORT}:80"
    networks:
      - backend

  ### ✅ Next.js Frontend ###
  nextjs-frontend:
    container_name: "nextjs-frontend"
    build:
      context: ./src/web
      dockerfile: Dockerfile
      args:
        AUTH_NHSLOGIN_PRIVATE_KEY: "${AUTH_NHSLOGIN_PRIVATE_KEY}"
    restart: always
    platform: linux/amd64
    depends_on:
      - experience-api
    ports:
      - "${WEB_PORT}:3000"
    networks:
      - backend

networks:
  backend:
    driver: bridge

volumes:
  postgres_data:
