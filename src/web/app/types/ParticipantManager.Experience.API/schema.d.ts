/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
    "/participants/me/id": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Get Participant ID
         * @description Retrieves the Participant ID associated with the authenticated user.
         */
        get: operations["GetParticipantId"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/participants/{participantId}/pathwaytypeenrolments/{enrolmentId}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Get Pathway Type Enrolment by ID
         * @description Retrieves a single Pathway Type Enrolment for the authenticated user.
         */
        get: operations["GetPathwayTypeEnrolmentById"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/participants/{participantId}/eligibility": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Get Screening Eligibility
         * @description Retrieves a list of screening pathways for which the authenticated user is eligible.
         */
        get: operations["GetScreeningEligibility"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
}
export type webhooks = Record<string, never>;
export interface components {
    schemas: {
        EnrolledPathwayDetailsDto: {
            /** Format: uuid */
            enrolmentId?: string;
            /** Format: date-time */
            enrolmentDate?: string;
            status?: string;
            /** Format: date-time */
            nextActionDate?: string | null;
            screeningName?: string;
            pathwayTypeName?: string;
            /** Format: uri */
            infoUrl?: string;
            participant?: components["schemas"]["ParticipantDto"];
        };
        PathwayTypeEnrolmentDto: {
            enrolmentId?: string;
            screeningName?: string;
            participant?: components["schemas"]["ParticipantDto"];
        };
        ParticipantDto: {
            /** Format: uuid */
            participantId?: string;
            /** Format: date */
            dob?: string;
            nhsNumber?: string;
            name?: string;
        };
    };
    responses: never;
    parameters: never;
    requestBodies: never;
    headers: never;
    pathItems: never;
}
export type $defs = Record<string, never>;
export interface operations {
    GetParticipantId: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successfully retrieved the participant ID. */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": string;
                };
            };
            /** @description Bad request. Invalid request format or missing context. */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "text/plain": string;
                };
            };
            /** @description Authentication is required and has failed or not been provided. */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Authenticated but not authorized to access this resource. */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Participant not found for the authenticated user. */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Internal server error. This indicates an unexpected failure in the service. */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    GetPathwayTypeEnrolmentById: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description The ID of the participant. */
                participantId: string;
                /** @description The ID of the enrolment. */
                enrolmentId: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successfully retrieved the pathway type enrolment. */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["EnrolledPathwayDetailsDto"];
                };
            };
            /** @description Bad request. Parameters may be invalid. */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "text/plain": string;
                };
            };
            /** @description Authentication is required and has failed or not been provided. */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Authenticated but not authorized to access this resource. */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description The specified enrolment or participant was not found. */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Internal server error. This indicates an unexpected failure in the service. */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    GetScreeningEligibility: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description The ID of the participant to check eligibility for. */
                participantId: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successfully retrieved screening eligibility enrolments. */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["PathwayTypeEnrolmentDto"][];
                };
            };
            /** @description Bad request. Participant ID may be invalid. */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "text/plain": string;
                };
            };
            /** @description Authentication is required and has failed or not been provided. */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Authenticated but not authorized to access this resource. */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Internal server error. This indicates an unexpected failure in the service. */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
}
