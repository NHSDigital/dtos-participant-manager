/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
    "/participants": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Get Participant by NHS Number
         * @description Retrieves a single Participant by their NHS Number
         */
        get: operations["GetParticipantByNhsNumber"];
        put?: never;
        /**
         * Create Participant
         * @description Creates a new Participant
         */
        post: operations["Create Participant"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/participants/{participantId}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Get Participant by Participant ID
         * @description Retrieves a single Participant by their Participant ID
         */
        get: operations["GetParticipantById"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/participants/{participantId}/pathwaytypeenrolments/{enrolmentId}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Get a single pathway type enrolment by participant ID and enrolment identifier */
        get: operations["GetPathwayTypeEnrolmentById"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/pathwaytypeenrolments": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Get Pathway Type Enrolments by Participant ID
         * @description Get a list of Pathway Type Enrolments for a Participant
         */
        get: operations["GetPathwayTypeEnrolmentsByParticipantId"];
        put?: never;
        /**
         * Create Pathway Type Enrolment
         * @description Creates a new Pathway Type Enrolment
         */
        post: operations["CreatePathwayTypeEnrolment"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
}
export type webhooks = Record<string, never>;
export interface components {
    schemas: {
        Participant: {
            /**
             * Format: uuid
             * @description System-generated unique identifier for the Participant
             */
            readonly participantId?: string;
            /** @description Name of the Participant */
            name: string;
            /**
             * Format: date
             * @description Date of birth of the Participant
             */
            dob: string;
            /** @description NHS Number (exactly 10 digits) */
            nhsNumber: string;
        };
        PathwayTypeEnrolment: {
            /** Format: uuid */
            readonly enrolmentId?: string;
            /** Format: uuid */
            participantId: string;
            /** Format: uuid */
            pathwayTypeId: string;
            /** Format: date */
            enrolmentDate?: string;
            /** Format: date */
            lapsedDate?: string | null;
            /** @default Active */
            status: string;
            /** Format: date */
            nextActionDate?: string | null;
            participant: components["schemas"]["Participant"];
            episodes?: components["schemas"]["Episode"][];
            screeningName: string;
            pathwayTypeName: string;
        };
        Episode: {
            /** Format: uuid */
            episodeId?: string;
            /** Format: uuid */
            enrolmentId: string;
            pathwayVersion: string;
            status: string;
        };
    };
    responses: never;
    parameters: never;
    requestBodies: never;
    headers: never;
    pathItems: never;
}
export type $defs = Record<string, never>;
export interface operations {
    GetParticipantByNhsNumber: {
        parameters: {
            query: {
                /** @description The NHS Number of the participant to find. */
                nhsNumber: string;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successfully retrieved Participant. */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Participant"];
                };
            };
            /** @description NHS Number not provided */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "text/plain": string;
                };
            };
            /** @description No participant found for the specified NHS number */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "text/plain": string;
                };
            };
            /** @description Internal server error. This indicates an unexpected failure in the service. */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    "Create Participant": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["Participant"];
            };
        };
        responses: {
            /** @description Participant created successfully */
            201: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Participant"];
                };
            };
            /** @description Bad request. Supplied participant payload invalid. */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "text/plain": string;
                };
            };
            /** @description Participant with given NHS Number already exists. */
            409: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Internal server error. This indicates an unexpected failure in the service. */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    GetParticipantById: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description The ID of the Participant to find. */
                participantId: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successfully retrieved Participant. */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Participant"];
                };
            };
            /** @description No participant found for the specified NHS number */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "text/plain": string;
                };
            };
            /** @description Internal server error. This indicates an unexpected failure in the service. */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    GetPathwayTypeEnrolmentById: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description The ID of the Participant for whom to find a pathway type enrolment */
                participantId: string;
                /** @description The ID of the Enrolment to find. */
                enrolmentId: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successfully retrieved Pathway Type Enrolment. */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["PathwayTypeEnrolment"];
                };
            };
            /** @description No pathway type enrolment found for the specified identifiers */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "text/plain": string;
                };
            };
            /** @description Internal server error. This indicates an unexpected failure in the service. */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    GetPathwayTypeEnrolmentsByParticipantId: {
        parameters: {
            query: {
                /** @description The ID of the Participant for whom to retrieve Pathway Type Enrolments */
                participantId: string;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description List of Pathway Type Enrolments */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["PathwayTypeEnrolment"][];
                };
            };
            /** @description Participant ID not provided */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "text/plain": string;
                };
            };
            /** @description Internal server error. This indicates an unexpected failure in the service. */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    CreatePathwayTypeEnrolment: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["PathwayTypeEnrolment"];
            };
        };
        responses: {
            /** @description Pathway Type Enrolment created successfully */
            201: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["PathwayTypeEnrolment"];
                };
            };
            /** @description Bad request. Supplied pathway type enrolment payload invalid. */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "text/plain": string;
                };
            };
            /** @description Internal server error. This indicates an unexpected failure in the service. */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
}
